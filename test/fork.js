// Generated by CoffeeScript 1.8.0
(function() {
  var WorkerClient, chai, chaiAsPromised, child_process, expect, sinon;

  if (typeof require !== "undefined" && require !== null) {
    chai = require('chai');
  } else {
    chai = this.chai;
  }

  chai.should();

  expect = chai.expect;

  if (typeof require !== "undefined" && require !== null) {
    chaiAsPromised = require('chai-as-promised');
  } else {
    chaiAsPromised = this.chaiAsPromised;
  }

  chai.use(chaiAsPromised);

  if (typeof require !== "undefined" && require !== null) {
    sinon = require('sinon');
    WorkerClient = require('../WorkerClient.js');
  } else {
    sinon = this.sinon;
    WorkerClient = this.WorkerClient;
  }

  child_process = require('child_process');

  describe('fork', function() {
    var client;
    client = null;
    beforeEach(function() {
      var worker;
      worker = child_process.fork('./fork_server.js');
      return client = new WorkerClient(worker, null, 'fork');
    });
    return it('should work', function() {
      client.request('test1', ['test', 1]).should.eventually.equal('ok');
      return client.request('test1', 1).should.rejectedWith('ng');
    });
  });

}).call(this);
